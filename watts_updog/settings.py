"""
Django settings for watts_updog project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from os import getenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-l++zt_#jx)oz!)b#8uka!p-15z7o@=7kh8zq_$wegh+tr579da"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "devices",
    "metrics",
    "users",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "watts_updog.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "watts_updog.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "timescale.db.backends.postgresql",
        "NAME": getenv("DB_NAME", "watts-updog"),
        "USER": getenv("DB_USER", "watts-updog"),
        "PASSWORD": getenv("DB_PASSWORD", "watts-updog"),
        "HOST": getenv("DB_HOST", "database"),
        "PORT": getenv("DB_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Lisbon"

USE_I18N = True

USE_TZ = True

FORMAT_MODULE_PATH = ["watts_updog.formats"]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Custom user model

AUTH_USER_MODEL = "users.User"

# MQTT broker

MQTT_HOST = getenv("MQTT_HOST", "localhost")
MQTT_PORT = int(getenv("MQTT_PORT", 1883))
MQTT_TOPICS = getenv("MQTT_TOPICS", "#").split(",")

# Logging

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "colored",
            "stream": "ext://sys.stdout",
        },
    },
    "formatters": {
        "verbose": {"format": "[%(asctime)s] [%(levelname)s] %(module)s: %(message)s"},
        "simple": {"format": "%(levelname)s %(message)s"},
        "colored": {
            "()": "colorlog.ColoredFormatter",
            "format": "%(asctime)s.%(msecs)03d "
            "%(log_color)s[%(levelname)4.4s]%(reset)s "
            "(%(process)s.%(threadName)s) "
            "%(name_log_color)s%(name)s%(reset)s: "
            "%(message)s",
            "datefmt": "%H:%M:%S",
            "log_colors": {
                "DEBUG": "bold_cyan",
                "INFO": "bold_green",
                "WARNING": "bold_yellow",
                "ERROR": "bold_red",
                "CRITICAL": "bold_purple",
            },
            "secondary_log_colors": {
                "name": {
                    "DEBUG": "bold_white",
                    "INFO": "bold_white",
                    "WARNING": "bold_yellow",
                    "ERROR": "bold_red",
                    "CRITICAL": "bold_purple",
                }
            },
        },
    },
    "root": {"level": "INFO", "handlers": ["console"]},
    "loggers": {
        "asyncio": {"level": "INFO"},
        "daphne": {"level": "INFO"},
        "django": {"level": "INFO"},
        "django.channels": {"level": "DEBUG"},
        "django.db": {"level": "INFO"},
        "urllib3": {"level": "DEBUG"},
        "requests": {"level": "DEBUG"},
        "paramiko": {"level": "DEBUG"},
        "watts_updog": {"level": "DEBUG"},
        "devices": {"level": "DEBUG"},
        "metrics": {"level": "DEBUG"},
        "users": {"level": "DEBUG"},
    },
}
